#! /usr/bin/env pdo-shell

## Copyright 2018 Intel Corporation
##
## Licensed under the Apache License, Version 2.0 (the "License");
## you may not use this file except in compliance with the License.
## You may obtain a copy of the License at
##
##     http://www.apache.org/licenses/LICENSE-2.0
##
## Unless required by applicable law or agreed to in writing, software
## distributed under the License is distributed on an "AS IS" BASIS,
## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
## See the License for the specific language governing permissions and
## limitations under the License.

## Two shell variables are used:
##    data -- the directory where the contract objects are stored
##    path -- the directory where the PSH scripts are stored
##
## $ pdo-shell -s create.psh -m path <contract path>

set --conditional -s home -v .
set --conditional -s data -v .
set --conditional -s save -v .
set --conditional -s _bin_ -v ${home}/contracts/exchange/scripts

script -f ${_bin_}/init.psh

set --conditional -s color -v green

set -s user1_key -i user1
set -s user2_key -i user2
set -s user3_key -i user3
set -s user4_key -i user4
set -s user5_key -i user5

set --conditional -s issuer_identity -v ${color}_issuer
set --conditional -s type_identity -v ${color}_type
set --conditional -s vetting_identity -v ${color}_vetting

trap_error

## =================================================================
echo ${HEADER} create the asset type for ${color} marbles ${ENDC}
## =================================================================
script -f ${_bin_}/create_type.psh -i green_type -m _description_ "this is a green marble type"
if -o ${_error_code_} 0
   echo ${ERROR} [ERROR ${_error_code_}] failed to create the asset type; ${_error_message_}
   exit -v ${_error_code_}
fi

script -f ${_path_}/tests/asset_type.psh
if -o ${_error_code_} 0
   echo ${ERROR} [ERROR ${_error_code_}] asset type test failed; ${_error_message_}
   exit -v ${_error_code_}
fi

## =================================================================
echo ${HEADER} create and initialize the vetting organization for ${color} marbles ${ENDC}
## =================================================================
script -f ${_bin_}/create_vetting.psh
script -f ${_path_}/tests/vetting.psh
if -o ${_error_code_} 0
   echo asset type test failed; ${error_message}
   exit -v ${_error_code_}
fi

## =================================================================
echo ${HEADER} create and initialize the ${color} marble issuer ${ENDC}
## =================================================================
script -f ${_bin_}/create_issuer.psh
script -f ${_bin_}/approve_issuer.psh
script -f ${_bin_}/initialize_issuer.psh

script -f ${_path_}/tests/issuer1.psh
if -o ${_error_code_} 0
   echo issuer1 test failed; ${error_message}
   exit -v ${_error_code_}
fi

script -f ${_path_}/tests/issuer2.psh
if -o ${_error_code_} 0
   echo issuer2 test failed; ${error_message}
   exit -v ${_error_code_}
fi

## =================================================================
script -f ${_path_}/tests/exchange1.psh
if -o ${_error_code_} 0
   echo exchange1 test failed; ${error_message}
   exit -v ${_error_code_}
fi

script -f ${_path_}/tests/exchange2.psh
if -o ${_error_code_} 0
   echo exchange2 test failed; ${error_message}
   exit -v ${_error_code_}
fi

## =================================================================
script -f ${_path_}/tests/escrow1.psh
if -o ${_error_code_} 0
   echo exchange2 test failed; ${error_message}
   exit -v ${_error_code_}
fi

## =================================================================
script -f ${_path_}/tests/token1.psh
if -o ${_error_code_} 0
   echo token1 test failed; ${error_message}
   exit -v ${_error_code_}
fi

exit
