#! /usr/bin/env pdo-shell

## Copyright 2022 Intel Corporation
##
## Licensed under the Apache License, Version 2.0 (the "License");
## you may not use this file except in compliance with the License.
## You may obtain a copy of the License at
##
##     http://www.apache.org/licenses/LICENSE-2.0
##
## Unless required by applicable law or agreed to in writing, software
## distributed under the License is distributed on an "AS IS" BASIS,
## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
## See the License for the specific language governing permissions and
## limitations under the License.

## Two shell variables are used:
##    data -- the directory where the contract objects are stored
##    path -- the directory where the PSH scripts are stored
##
## $ pdo-shell -s create.psh -m path <contract path>

set --conditional -s home -v .
set --conditional -s data -v .
set --conditional -s save -v .
set --conditional -s _exchange_bin_ -v ${home}/contracts/exchange/scripts

script -f ${_exchange_bin_}/init.psh

set --conditional -s da_contracts -v ${home}/contracts/digital_asset

load_plugin -m pdo.digital_asset.plugins.token_object
load_plugin -m pdo.digital_asset.plugins.guardian

## =================================================================
## set up the necessary variables
## =================================================================
set --conditional -s _test_ -v da1

set -s _dg_contract_ -v ${save}/${_test_}_guardian.pdo
set -s _ti_contract_ -v ${save}/${_test_}_issuer.pdo
set -s _to1_contract_ -v ${save}/${_test_}_object_1.pdo
set -s _to2_contract_ -v ${save}/${_test_}_object_2.pdo
set -s _to3_contract_ -v ${save}/${_test_}_object_3.pdo
set -s _to4_contract_ -v ${save}/${_test_}_object_4.pdo
set -s _to5_contract_ -v ${save}/${_test_}_object_5.pdo
set -s _type_contract_ -v ${save}/${_test_}_type.pdo
set -s _vetting_contract_ -v ${save}/${_test_}_vetting.pdo

set -s holder1_key -i token_holder1
set -s holder2_key -i token_holder2
set -s holder3_key -i token_holder3
set -s holder4_key -i token_holder4
set -s holder5_key -i token_holder5

## =================================================================
ledger ledger-key -s _ledger_key_

## =================================================================
echo ${HEADER} create the vetting and type contracts for test ${_test_} ${ENDC}
## =================================================================

## Token issuers are an issuer and require all of the context that
## is required for all issuers. The type represents a type of all
## related tokens. The vetting organization is one vetter that ensures
## that token issuers are "reasonable".

identity -n token_type
contract create -c asset_type --source ${contracts}/_asset_type -f ${_type_contract_}
asset_type_contract initialize -w -f ${_type_contract_} -n "token_type" -d "token type" -l "http://"
asset_type_contract get_asset_type_identifier -f ${_type_contract_} -s _type_id_

identity -n token_vetting
contract create -c vetting_organization_contract --source ${contracts}/_vetting_organization -f ${_vetting_contract_}
vetting_contract initialize -w -f ${_vetting_contract_} -t ${_type_id_}
vetting_contract get_verifying_key -f ${_vetting_contract_} -s _vetting_id_

## =================================================================
echo ${HEADER} create a data guardian for test ${_test_} ${ENDC}
## =================================================================

identity -n token_issuer
contract create -c da_guardian --source ${da_contracts}/_da_guardian -f ${_dg_contract_}
da_guardian_contract initialize \
            -w -f ${_dg_contract_} \
            -t token_issuer ${contracts}/_token_issuer -l "${_ledger_key_}" \
            -i ${_path_}/images/test-100x100.bmp

## =================================================================
echo ${HEADER} create a token issuer for test ${_test_} ${ENDC}
## =================================================================

identity -n token_issuer
contract create -c token_issuer --source ${contracts}/_token_issuer -f ${_ti_contract_}

contract info -f ${_ti_contract_} -s _ti_id_ --field contract-id
ledger contract-info -s _ti_info_ -i ${_ti_id_}
token_issuer_contract get_contract_code_metadata -f ${_ti_contract_} -s _ti_code_metadata_
token_issuer_contract get_contract_metadata -f ${_ti_contract_} -s _ti_metadata_

da_guardian_contract add_endpoint -w -f ${_dg_contract_} -i ${_ti_id_} -l "${_ti_info_}" \
         -c "${_ti_code_metadata_}" -m "${_ti_metadata_}"
da_guardian_contract provision_token_issuer -f ${_dg_contract_} -s _ti_package_ -i ${_ti_id_}

identity -n token_vetting
parse -e ${_ti_metadata_} -p "verifying_key" -s _ti_verifying_key_
vetting_contract approve_issuer -w -f ${_vetting_contract_} -i ${_ti_verifying_key_}

identity -n token_issuer
vetting_contract get_issuer_authority -f ${_vetting_contract_} -s _authority_ -i ${_ti_verifying_key_}
token_issuer_contract initialize -w -f ${_ti_contract_} -a ${_authority_} \
             -t token_object ${da_contracts}/_da_token_object \
             -d "test token" -i "${_ti_package_}" -l "${_ledger_key_}" -m 5

## =================================================================
echo ${HEADER} create the token objects for test ${_test_} ${ENDC}
## =================================================================

script -f ${_exchange_bin_}/mint_token.psh \
       -m to_file ${_to1_contract_} -m ti_file ${_ti_contract_} -m dg_file ${_dg_contract_} \
       -m to_class token_object -m to_code ${da_contracts}/_da_token_object

script -f ${_exchange_bin_}/mint_token.psh \
       -m to_file ${_to2_contract_} -m ti_file ${_ti_contract_} -m dg_file ${_dg_contract_} \
       -m to_class token_object -m to_code ${da_contracts}/_da_token_object

script -f ${_exchange_bin_}/mint_token.psh \
       -m to_file ${_to3_contract_} -m ti_file ${_ti_contract_} -m dg_file ${_dg_contract_} \
       -m to_class token_object -m to_code ${da_contracts}/_da_token_object

script -f ${_exchange_bin_}/mint_token.psh \
       -m to_file ${_to4_contract_} -m ti_file ${_ti_contract_} -m dg_file ${_dg_contract_} \
       -m to_class token_object -m to_code ${da_contracts}/_da_token_object

script -f ${_exchange_bin_}/mint_token.psh \
       -m to_file ${_to5_contract_} -m ti_file ${_ti_contract_} -m dg_file ${_dg_contract_} \
       -m to_class token_object -m to_code ${da_contracts}/_da_token_object

## =================================================================
echo ${HEADER} check some operations ${ENDC}
## =================================================================
da_token_contract get_image_metadata -w -f ${_to1_contract_} -s _value_ -d ${_dg_contract_}
echo Image metadata: ${_value_}

da_token_contract get_public_image -w -f ${_to1_contract_} -d ${_dg_contract_} -i "/tmp/public.bmp"
da_token_contract get_original_image -w -f ${_to1_contract_} -d ${_dg_contract_} -i "/tmp/original.bmp"

exit
